# Generated by vinca http://github.com/seanyen/vinca.
# DO NOT EDIT!

export CATKIN_BUILD_BINARY_PACKAGE_ARGS="-DCATKIN_BUILD_BINARY_PACKAGE=1"

if [ "${PKG_NAME}" == "ros-@(ros_distro)-catkin" ]; then
    # create catkin cookie to make it is a catkin workspace
    touch $PREFIX/.catkin
    # keep the workspace activation scripts (e.g., local_setup.bat)
    unset CATKIN_BUILD_BINARY_PACKAGE_ARGS=
fi

rm -rf build
mkdir build
cd build

# turn this into a catkin workspace by adding the catkin token if it doesn't
# exist already
if [ ! -f $PREFIX/.catkin ]; then
    touch $PREFIX/.catkin
fi

# necessary for correctly linking SIP files (from python_qt_bindings)
export LINK=$CXX

export ROS_PYTHON_VERSION=`python -c "import sys; print('%i.%i' % (sys.version_info[0:2]))"`
echo "Using Python $ROS_PYTHON_VERSION"

# NOTE: there might be undefined references occurring
# in the Boost.system library, depending on the C++ versions
# used to compile Boost. We can avoid them by forcing the use of
# the header-only version of the library.
export CXXFLAGS="$CXXFLAGS -DBOOST_ERROR_CODE_HEADER_ONLY"

cmake .. -DCMAKE_INSTALL_PREFIX=$PREFIX \
         -DCMAKE_PREFIX_PATH=$PREFIX \
         -DCMAKE_BUILD_TYPE=Release \
         -DBUILD_SHARED_LIBS=ON \
         -DPYTHON_EXECUTABLE=$(which python) \
         -DSETUPTOOLS_DEB_LAYOUT=OFF \
         -DCATKIN_SKIP_TESTING=ON \
         $CATKIN_BUILD_BINARY_PACKAGE_ARGS \
         $SRC_DIR/$PKG_NAME/src/work

make VERBOSE=1 -j${CPU_COUNT}
make install